package com.mybatis.models;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.Iterator;

public class RubricaExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public RubricaExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdRubricaIsNull() {
			addCriterion("id_rubrica is null");
			return (Criteria) this;
		}

		public Criteria andIdRubricaIsNotNull() {
			addCriterion("id_rubrica is not null");
			return (Criteria) this;
		}

		public Criteria andIdRubricaEqualTo(Integer value) {
			addCriterion("id_rubrica =", value, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdRubricaNotEqualTo(Integer value) {
			addCriterion("id_rubrica <>", value, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdRubricaGreaterThan(Integer value) {
			addCriterion("id_rubrica >", value, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdRubricaGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_rubrica >=", value, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdRubricaLessThan(Integer value) {
			addCriterion("id_rubrica <", value, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdRubricaLessThanOrEqualTo(Integer value) {
			addCriterion("id_rubrica <=", value, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdRubricaIn(List<Integer> values) {
			addCriterion("id_rubrica in", values, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdRubricaNotIn(List<Integer> values) {
			addCriterion("id_rubrica not in", values, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdRubricaBetween(Integer value1, Integer value2) {
			addCriterion("id_rubrica between", value1, value2, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdRubricaNotBetween(Integer value1, Integer value2) {
			addCriterion("id_rubrica not between", value1, value2, "idRubrica");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaIsNull() {
			addCriterion("id_asignatura is null");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaIsNotNull() {
			addCriterion("id_asignatura is not null");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaEqualTo(Integer value) {
			addCriterion("id_asignatura =", value, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaNotEqualTo(Integer value) {
			addCriterion("id_asignatura <>", value, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaGreaterThan(Integer value) {
			addCriterion("id_asignatura >", value, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_asignatura >=", value, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaLessThan(Integer value) {
			addCriterion("id_asignatura <", value, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaLessThanOrEqualTo(Integer value) {
			addCriterion("id_asignatura <=", value, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaIn(List<Integer> values) {
			addCriterion("id_asignatura in", values, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaNotIn(List<Integer> values) {
			addCriterion("id_asignatura not in", values, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaBetween(Integer value1, Integer value2) {
			addCriterion("id_asignatura between", value1, value2, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andIdAsignaturaNotBetween(Integer value1, Integer value2) {
			addCriterion("id_asignatura not between", value1, value2, "idAsignatura");
			return (Criteria) this;
		}

		public Criteria andDescripcionIsNull() {
			addCriterion("descripcion is null");
			return (Criteria) this;
		}

		public Criteria andDescripcionIsNotNull() {
			addCriterion("descripcion is not null");
			return (Criteria) this;
		}

		public Criteria andDescripcionEqualTo(String value) {
			addCriterion("descripcion =", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotEqualTo(String value) {
			addCriterion("descripcion <>", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionGreaterThan(String value) {
			addCriterion("descripcion >", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
			addCriterion("descripcion >=", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionLessThan(String value) {
			addCriterion("descripcion <", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionLessThanOrEqualTo(String value) {
			addCriterion("descripcion <=", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionLike(String value) {
			addCriterion("descripcion like", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotLike(String value) {
			addCriterion("descripcion not like", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionIn(List<String> values) {
			addCriterion("descripcion in", values, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotIn(List<String> values) {
			addCriterion("descripcion not in", values, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionBetween(String value1, String value2) {
			addCriterion("descripcion between", value1, value2, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotBetween(String value1, String value2) {
			addCriterion("descripcion not between", value1, value2, "descripcion");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaIsNull() {
			addCriterion("id_tipo_rubrica is null");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaIsNotNull() {
			addCriterion("id_tipo_rubrica is not null");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaEqualTo(Integer value) {
			addCriterion("id_tipo_rubrica =", value, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaNotEqualTo(Integer value) {
			addCriterion("id_tipo_rubrica <>", value, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaGreaterThan(Integer value) {
			addCriterion("id_tipo_rubrica >", value, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaGreaterThanOrEqualTo(Integer value) {
			addCriterion("id_tipo_rubrica >=", value, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaLessThan(Integer value) {
			addCriterion("id_tipo_rubrica <", value, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaLessThanOrEqualTo(Integer value) {
			addCriterion("id_tipo_rubrica <=", value, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaIn(List<Integer> values) {
			addCriterion("id_tipo_rubrica in", values, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaNotIn(List<Integer> values) {
			addCriterion("id_tipo_rubrica not in", values, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaBetween(Integer value1, Integer value2) {
			addCriterion("id_tipo_rubrica between", value1, value2, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andIdTipoRubricaNotBetween(Integer value1, Integer value2) {
			addCriterion("id_tipo_rubrica not between", value1, value2, "idTipoRubrica");
			return (Criteria) this;
		}

		public Criteria andNumeroIsNull() {
			addCriterion("numero is null");
			return (Criteria) this;
		}

		public Criteria andNumeroIsNotNull() {
			addCriterion("numero is not null");
			return (Criteria) this;
		}

		public Criteria andNumeroEqualTo(Integer value) {
			addCriterion("numero =", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroNotEqualTo(Integer value) {
			addCriterion("numero <>", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroGreaterThan(Integer value) {
			addCriterion("numero >", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroGreaterThanOrEqualTo(Integer value) {
			addCriterion("numero >=", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroLessThan(Integer value) {
			addCriterion("numero <", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroLessThanOrEqualTo(Integer value) {
			addCriterion("numero <=", value, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroIn(List<Integer> values) {
			addCriterion("numero in", values, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroNotIn(List<Integer> values) {
			addCriterion("numero not in", values, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroBetween(Integer value1, Integer value2) {
			addCriterion("numero between", value1, value2, "numero");
			return (Criteria) this;
		}

		public Criteria andNumeroNotBetween(Integer value1, Integer value2) {
			addCriterion("numero not between", value1, value2, "numero");
			return (Criteria) this;
		}

		public Criteria andVersionIsNull() {
			addCriterion("version is null");
			return (Criteria) this;
		}

		public Criteria andVersionIsNotNull() {
			addCriterion("version is not null");
			return (Criteria) this;
		}

		public Criteria andVersionEqualTo(Integer value) {
			addCriterion("version =", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotEqualTo(Integer value) {
			addCriterion("version <>", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionGreaterThan(Integer value) {
			addCriterion("version >", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
			addCriterion("version >=", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionLessThan(Integer value) {
			addCriterion("version <", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionLessThanOrEqualTo(Integer value) {
			addCriterion("version <=", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionIn(List<Integer> values) {
			addCriterion("version in", values, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotIn(List<Integer> values) {
			addCriterion("version not in", values, "version");
			return (Criteria) this;
		}

		public Criteria andVersionBetween(Integer value1, Integer value2) {
			addCriterion("version between", value1, value2, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotBetween(Integer value1, Integer value2) {
			addCriterion("version not between", value1, value2, "version");
			return (Criteria) this;
		}

		public Criteria andFechaVersionIsNull() {
			addCriterion("fecha_version is null");
			return (Criteria) this;
		}

		public Criteria andFechaVersionIsNotNull() {
			addCriterion("fecha_version is not null");
			return (Criteria) this;
		}

		public Criteria andFechaVersionEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_version =", value, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andFechaVersionNotEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_version <>", value, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andFechaVersionGreaterThan(Date value) {
			addCriterionForJDBCDate("fecha_version >", value, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andFechaVersionGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_version >=", value, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andFechaVersionLessThan(Date value) {
			addCriterionForJDBCDate("fecha_version <", value, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andFechaVersionLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fecha_version <=", value, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andFechaVersionIn(List<Date> values) {
			addCriterionForJDBCDate("fecha_version in", values, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andFechaVersionNotIn(List<Date> values) {
			addCriterionForJDBCDate("fecha_version not in", values, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andFechaVersionBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha_version between", value1, value2, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andFechaVersionNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fecha_version not between", value1, value2, "fechaVersion");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaIsNull() {
			addCriterion("alcance_nota is null");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaIsNotNull() {
			addCriterion("alcance_nota is not null");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaEqualTo(Integer value) {
			addCriterion("alcance_nota =", value, "alcanceNota");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaNotEqualTo(Integer value) {
			addCriterion("alcance_nota <>", value, "alcanceNota");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaGreaterThan(Integer value) {
			addCriterion("alcance_nota >", value, "alcanceNota");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaGreaterThanOrEqualTo(Integer value) {
			addCriterion("alcance_nota >=", value, "alcanceNota");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaLessThan(Integer value) {
			addCriterion("alcance_nota <", value, "alcanceNota");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaLessThanOrEqualTo(Integer value) {
			addCriterion("alcance_nota <=", value, "alcanceNota");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaIn(List<Integer> values) {
			addCriterion("alcance_nota in", values, "alcanceNota");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaNotIn(List<Integer> values) {
			addCriterion("alcance_nota not in", values, "alcanceNota");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaBetween(Integer value1, Integer value2) {
			addCriterion("alcance_nota between", value1, value2, "alcanceNota");
			return (Criteria) this;
		}

		public Criteria andAlcanceNotaNotBetween(Integer value1, Integer value2) {
			addCriterion("alcance_nota not between", value1, value2, "alcanceNota");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table rubrica
	 * @mbg.generated  Sat Feb 16 11:11:26 COT 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rubrica
     *
     * @mbg.generated do_not_delete_during_merge Mon Mar 26 14:58:32 COT 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}