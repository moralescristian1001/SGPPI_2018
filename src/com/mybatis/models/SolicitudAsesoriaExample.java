package com.mybatis.models;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SolicitudAsesoriaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public SolicitudAsesoriaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andIdSolicitudIsNull() {
            addCriterion("id_solicitud is null");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudIsNotNull() {
            addCriterion("id_solicitud is not null");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudEqualTo(Integer value) {
            addCriterion("id_solicitud =", value, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudNotEqualTo(Integer value) {
            addCriterion("id_solicitud <>", value, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudGreaterThan(Integer value) {
            addCriterion("id_solicitud >", value, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_solicitud >=", value, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudLessThan(Integer value) {
            addCriterion("id_solicitud <", value, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudLessThanOrEqualTo(Integer value) {
            addCriterion("id_solicitud <=", value, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudIn(List<Integer> values) {
            addCriterion("id_solicitud in", values, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudNotIn(List<Integer> values) {
            addCriterion("id_solicitud not in", values, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudBetween(Integer value1, Integer value2) {
            addCriterion("id_solicitud between", value1, value2, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdSolicitudNotBetween(Integer value1, Integer value2) {
            addCriterion("id_solicitud not between", value1, value2, "idSolicitud");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteIsNull() {
            addCriterion("id_estudiante is null");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteIsNotNull() {
            addCriterion("id_estudiante is not null");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteEqualTo(Integer value) {
            addCriterion("id_estudiante =", value, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteNotEqualTo(Integer value) {
            addCriterion("id_estudiante <>", value, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteGreaterThan(Integer value) {
            addCriterion("id_estudiante >", value, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_estudiante >=", value, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteLessThan(Integer value) {
            addCriterion("id_estudiante <", value, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteLessThanOrEqualTo(Integer value) {
            addCriterion("id_estudiante <=", value, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteIn(List<Integer> values) {
            addCriterion("id_estudiante in", values, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteNotIn(List<Integer> values) {
            addCriterion("id_estudiante not in", values, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteBetween(Integer value1, Integer value2) {
            addCriterion("id_estudiante between", value1, value2, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andIdEstudianteNotBetween(Integer value1, Integer value2) {
            addCriterion("id_estudiante not between", value1, value2, "idEstudiante");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaIsNull() {
            addCriterion("dia_semana is null");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaIsNotNull() {
            addCriterion("dia_semana is not null");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaEqualTo(Integer value) {
            addCriterion("dia_semana =", value, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaNotEqualTo(Integer value) {
            addCriterion("dia_semana <>", value, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaGreaterThan(Integer value) {
            addCriterion("dia_semana >", value, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaGreaterThanOrEqualTo(Integer value) {
            addCriterion("dia_semana >=", value, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaLessThan(Integer value) {
            addCriterion("dia_semana <", value, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaLessThanOrEqualTo(Integer value) {
            addCriterion("dia_semana <=", value, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaIn(List<Integer> values) {
            addCriterion("dia_semana in", values, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaNotIn(List<Integer> values) {
            addCriterion("dia_semana not in", values, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaBetween(Integer value1, Integer value2) {
            addCriterion("dia_semana between", value1, value2, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andDiaSemanaNotBetween(Integer value1, Integer value2) {
            addCriterion("dia_semana not between", value1, value2, "diaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaIsNull() {
            addCriterion("hora_semana is null");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaIsNotNull() {
            addCriterion("hora_semana is not null");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaEqualTo(Date value) {
            addCriterionForJDBCTime("hora_semana =", value, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaNotEqualTo(Date value) {
            addCriterionForJDBCTime("hora_semana <>", value, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaGreaterThan(Date value) {
            addCriterionForJDBCTime("hora_semana >", value, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("hora_semana >=", value, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaLessThan(Date value) {
            addCriterionForJDBCTime("hora_semana <", value, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("hora_semana <=", value, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaIn(List<Date> values) {
            addCriterionForJDBCTime("hora_semana in", values, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaNotIn(List<Date> values) {
            addCriterionForJDBCTime("hora_semana not in", values, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("hora_semana between", value1, value2, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andHoraSemanaNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("hora_semana not between", value1, value2, "horaSemana");
            return (Criteria) this;
        }

        public Criteria andAceptadaIsNull() {
            addCriterion("aceptada is null");
            return (Criteria) this;
        }

        public Criteria andAceptadaIsNotNull() {
            addCriterion("aceptada is not null");
            return (Criteria) this;
        }

        public Criteria andAceptadaEqualTo(Boolean value) {
            addCriterion("aceptada =", value, "aceptada");
            return (Criteria) this;
        }

        public Criteria andAceptadaNotEqualTo(Boolean value) {
            addCriterion("aceptada <>", value, "aceptada");
            return (Criteria) this;
        }

        public Criteria andAceptadaGreaterThan(Boolean value) {
            addCriterion("aceptada >", value, "aceptada");
            return (Criteria) this;
        }

        public Criteria andAceptadaGreaterThanOrEqualTo(Boolean value) {
            addCriterion("aceptada >=", value, "aceptada");
            return (Criteria) this;
        }

        public Criteria andAceptadaLessThan(Boolean value) {
            addCriterion("aceptada <", value, "aceptada");
            return (Criteria) this;
        }

        public Criteria andAceptadaLessThanOrEqualTo(Boolean value) {
            addCriterion("aceptada <=", value, "aceptada");
            return (Criteria) this;
        }

        public Criteria andAceptadaIn(List<Boolean> values) {
            addCriterion("aceptada in", values, "aceptada");
            return (Criteria) this;
        }

        public Criteria andAceptadaNotIn(List<Boolean> values) {
            addCriterion("aceptada not in", values, "aceptada");
            return (Criteria) this;
        }

        public Criteria andAceptadaBetween(Boolean value1, Boolean value2) {
            addCriterion("aceptada between", value1, value2, "aceptada");
            return (Criteria) this;
        }

        public Criteria andAceptadaNotBetween(Boolean value1, Boolean value2) {
            addCriterion("aceptada not between", value1, value2, "aceptada");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated do_not_delete_during_merge Mon Mar 26 15:02:57 COT 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table solicitud_asesoria
     *
     * @mbg.generated Mon Mar 26 15:02:57 COT 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}